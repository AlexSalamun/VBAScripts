Public lngLastRow As Long, strSign As String, Signature As String
Sub EmailTeams_Approval()

'Identify the variables
Dim rng As Range, USERS As Range, OWNERS As Range, SUPERS As Range, rngDept As Range, TableRng As Range
Dim collDepartment As New Collection, dept As Range, varDept As Variant, strDept As String
Dim collUser As New Collection, user As Range, varUser As Variant, strUser As String
Dim collOwner As New Collection, ownr As Range, varOwnr As Variant, strOwnr As String
Dim collSuper As New Collection, supr As Range, varSupr As Variant, strSupr As String
Dim cell As Range, cellOwner As Range, cellSuper As Range
Dim OutApp As Object, OutMail As Object

Call CCCSetup

On Error Resume Next
Set rngDept = Range("TableCC[Owner''s Department]").SpecialCells(xlCellTypeVisible)
'Trim off the cost code
    For Each cell In rngDept
    If cell.Offset(, -1) = "frank.defino" Or cell.Offset(, -1) = "rafal.daniewski" Or cell.Offset(, -1) = "joseph.hodlin" Or cell.Offset(, -1) = "long.le" Or cell.Offset(, -1) = "sameer.manocha" Or cell.Offset(, -1) = "michael.phillips" Or cell.Offset(, -1) = "alden.fernandes" Then cell.Value = "IT Operations"
    If cell.Offset(, -1) = "daniel.hsieh" Then cell.Value = "Research IT"
    If cell.Offset(, -1) = "stacy.valluzzo" Then cell.Value = "Quality Control"
    If cell.Offset(, -1) = "justin.ott" Then cell.Value = "QA Clinical & Preclinical Auditing"
    If cell.Offset(, -1) = "d.stevens" Then cell.Value = "IT Operations"
    If cell.Offset(, -1) = "virginia.saldajeno" Then cell.Value = "Research IT"
    If cell.Offset(, -1) = "kenneth.greiner" Then cell.Value = "Research IT"
    If cell.Offset(, -1) = "weiping.shao" Then cell.Value = "Principal Investigators"
    If cell.Offset(, -1) = "vladlen.rotshteyn" Then cell.Value = "Clinical Systems"
    If Not IsNumeric(Left(cell, 5)) Then GoTo nexter
        If cell.Value = Error2042 Then GoTo nexter 'skip the #N/A values
        cell.Value = Right(cell, Len(cell) - 5)
nexter:
    Next cell

Set rng = Range("TableCC[Owner]").SpecialCells(xlCellTypeVisible)
'Trim off the extra names in Owners
    For Each cellOwner In rng
        cellOwner.Value = Right(cellOwner, Len(cellOwner) - InStr(cellOwner, "("))
        cellOwner.Value = Left(cellOwner, InStr(cellOwner, ")") - 1)
    Next cellOwner

Set rng = Range("TableCC[Owner''s Supervisor]").SpecialCells(xlCellTypeVisible)
'Trim off the extra names in Owner's Supervisors
    For Each cellSuper In rng
        cellSuper.Value = Right(cellSuper, Len(cellSuper) - InStr(cellSuper, "("))
        cellSuper.Value = Left(cellSuper, InStr(cellSuper, ")") - 1)
    Next cellSuper
    
'Add the error for N/A into the collection first
        'collDepartment.Add "#N/A", CStr("#N/A")

    'Create a collection of the departments
    For Each dept In rngDept
    
        collDepartment.Add dept.Value, CStr(dept.Value)  'add the unique item
        
    Next dept
    
    'Find the column for departments
    i = Application.WorksheetFunction.Match("Owner's Department", Range("A1:AZ1"), 0)
    ActiveSheet.ListObjects("TableCC").Range.AutoFilter Field:=i, Criteria1:=strDept
    
    'loop through every Department
    For Each varDept In collDepartment
        strDept = CStr(varDept)
        ActiveSheet.ListObjects("TableCC").Range.AutoFilter Field:=i, Criteria1:=strDept
        
        'create a collection of Owners
        Set USERS = Range("TableCC[Owner]").SpecialCells(xlCellTypeVisible)
        For Each user In USERS
            collUser.Add user.Value, CStr(user.Value)
        Next user
        
        'create a collection of Owners
        Set OWNERS = Range("TableCC[Owner]").SpecialCells(xlCellTypeVisible)
        For Each ownr In OWNERS
            collUser.Add ownr.Value, CStr(ownr.Value)
        Next ownr
        
        'create a collection of Owner's Supervisors
        Set SUPERS = Range("TableCC[Owner''s Supervisor]").SpecialCells(xlCellTypeVisible)
        For Each supr In SUPERS
            collUser.Add supr.Value, CStr(supr.Value)
        Next supr
            
            For Each varUser In collUser
                strUser = CStr(varUser) & ";" & strUser
            Next varUser
        
        'Get the last row number for the range
        lngLastRow = ActiveSheet.Cells(ActiveSheet.Rows.Count, "A").End(xlUp).Row
        
        'Prepare the email per department
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)
                Set TableRng = Range("A1:Q" & lngLastRow).SpecialCells(xlCellTypeVisible)
                emailbody = "The purpose of this email is to increase the visibility of active Change Controls records responsibilities by department." & _
                " Below you will find the current status of your Department's Change Control records. No response is required. The table examines the number of business days a change " & _
                "control has been approved for execution" & _
                vbNewLine & RangetoHTML(TableRng) & " <br><br>" & "If you have any questions please reach out to Valerie Sastre " & _
                "(valerie.sastre@regeneron.com)" & "<br><br>"
                
'                emailbody = "Hello," & "<br><br>" & "The purpose of this email is to increase the visibility of active Change Controls records responsibilities by department." & _
'                " Below you will find the current status of your Department's Change Control records. No response is required. However, if a task needs to be reassigned" & _
'                " to a new user please contact Tarrytown Change Control to prevent hold up of the change." & _
'                vbNewLine & RangetoHTML(TableRng) & "<br><br>" & "If you have any questions please reach out to Valerie Sastre (valerie.sastre@regeneron.com)" & _
'                "<br><br>"
                
        'Select signature
            strSign = Environ("appdata") & "\Microsoft\Signatures\TTCC.htm"
                If Dir(strSign) <> "" Then
                    Signature = GetBoiler(strSign)
                Else
                    Signature = ""
                End If

If InStr(strUser, "DANIEL.LIQUORI") > 0 Then
                With OutMail
                    .To = strUser
                    .cc = "QualityOpsTTChangeControl@regeneron.com"
                    .BCC = ""
                    '.SentOnBehalfOfName = "QualityOpsTTChangeControl@regeneron.com"
                    .Subject = "Active Changes for your Department"
                    .HTMLBody = emailbody & "<br>" & Signature
                    .Attachments.Add ("C:\Users\alex.salamun\Desktop\Copy of Current Change Control Status 14Jan2019.xlsm")
                    ' In place of the following statement, you can use ".Send" to
                    ' automatically send the mail.
                    .Display
                End With
Else
                With OutMail
                    .To = strUser
                    .cc = "QualityOpsTTChangeControl@regeneron.com"
                    .BCC = ""
                    '.SentOnBehalfOfName = "QualityOpsTTChangeControl@regeneron.com"
                    .Subject = "Active Changes for your Department"
                    .HTMLBody = emailbody & "<br>" & Signature
                    '.Attachments.Add ("Copy of Current Change Control Status 14Jan2019.xlsm")
                    ' In place of the following statement, you can use ".Send" to
                    ' automatically send the mail.
                    .Display
                End With
End If
        
        
        strUser = Empty
        Set collUser = Nothing
    Next varDept

ActiveSheet.ListObjects("TableCC").Range.AutoFilter Field:=i
    
Set collDept = Nothing
Set rng = Nothing
Set auth = Nothing
On Error GoTo 0
End Sub


Function RangetoHTML(rng As Range)
' Changed by Ron de Bruin 28-Oct-2006
' Working in Office 2000-2016
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook

    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        .Cells(1).PasteSpecial Paste:=8
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        .Cells(1).Select
        Application.CutCopyMode = False
        On Error Resume Next
        .DrawingObjects.Visible = True
        .DrawingObjects.Delete
        On Error GoTo 0
    End With

    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With

    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    RangetoHTML = ts.readall
    ts.Close
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
                          "align=left x:publishsource=")

    'Close TempWB
    TempWB.Close savechanges:=False

    'Delete the htm file we used in this function
    Kill TempFile

    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
End Function
Sub CCCSetup()

On Error GoTo errorhandler


'Remove Yellow highlighter
    Range("TableCC[Business Days since Approval for Execution]").Select
    With Selection.Interior
        .Pattern = xlNone
        '.TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
'Filter for Tarrytown
    ActiveSheet.ListObjects("TableCC").Range.AutoFilter Field:=2, Criteria1:="Tarrytown"

'Change Style of Table
    ActiveSheet.ListObjects("TableCC").TableStyle = "TableStyleLight9"

'Hide unneccessary rows and remove Task Supervisor
    Range("TableCC[[Facility]]").Select
    Selection.EntireColumn.Hidden = True
    Range("TableCC[[Associated Area]]").Select
    Selection.EntireColumn.Hidden = True
    Range("TableCC[[Class]]").Select
    Selection.EntireColumn.Hidden = True
    
'Format columns
    Range("TableCC[[Owner''s Supervisor]]").EntireColumn.AutoFit
    Range("TableCC[[Business Days since Approval for Execution]]").EntireColumn.AutoFit
    Range("TableCC[[Owner''s Department]]").EntireColumn.AutoFit
    Range("TableCC[[Owner]]").EntireColumn.AutoFit
    Range("TableCC[[Workflow Stage]]").EntireColumn.AutoFit
    Range("TableCC[[Change Control Title]]").ColumnWidth = 64.57
    Range("TableCC[Change Control Title]").Select
    With Selection
        .WrapText = True
    End With
    
errorhandler:
End Sub

Function GetBoiler(ByVal sFile As String) As String
'Dick Kusleika
    Dim fso As Object
    Dim ts As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(sFile).OpenAsTextStream(1, -2)
    GetBoiler = ts.readall
    ts.Close
End Function



